import os
from os.path import join
from glob import glob
from types import ListType

base_env = Environment(ENV=os.environ)
base_env['BUILDERS']['ConvertImage'] = Builder(
    action='corconvert $SOURCE $TARGET')

root = Dir('.')
def Root():
    return root

def Here():
    return str(Dir('.').get_path(Root()))

def Install(env, files):
    if type(files) is not ListType:
        files = [files]
    for f in files:
        env.Install(env['TARGET'].Dir(Here()), f)

def ConvertImage(env, target, source):
    env.ConvertImage(env['TARGET'].Dir(Here()).File(target), source)

Export('Install ConvertImage')

tdirs = ['../build']
if base_env.get('PLATFORM') == 'cygwin':
    tdirs.append('../vc7/bin/Debug')
    tdirs.append('../vc7/bin/Release')


for t in map(Dir, tdirs):
    Default(t)
    env = base_env.Copy(TARGET=t)
    Export('env')
    SConscript(dirs=['editorrc', 'fonts', 'images', 'maps', 'models'])
